trigger:
  branches:
    include:
      - master
      - develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    path: node_modules
    cacheHitVar: NODE_MODULES_CACHE_HIT

- task: NodeTool@0
  inputs:
    versionSpec: '16.x'

- script: |
    if [ "$(NODE_MODULES_CACHE_HIT)" != "true" ]; then
      npm ci
    fi
  displayName: 'Install Dependencies'
  condition: ne(variables.NODE_MODULES_CACHE_HIT, 'true')

- script: npm run test -- --coverage
  displayName: 'Run Jest Tests with Coverage Report'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/jest-test-results.xml'
    testRunTitle: 'Jest Unit Tests'
    searchFolder: $(System.DefaultWorkingDirectory)

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
    failIfCoverageEmpty: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/coverage'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/coverage'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'